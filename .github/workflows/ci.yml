name: CI

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'build.gradle'
      - 'settings.gradle'
      - 'gradle/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'build.gradle'
      - 'settings.gradle'
      - 'gradle/**'

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      code_changed: ${{ steps.filter.outputs.code }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            code:
              - 'src/**'
              - 'build.gradle'
              - 'settings.gradle'
              - 'gradle/**'

  build:
    needs: detect
    if: needs.detect.outputs.code_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install Gradle via SDKMAN
        shell: bash
        run: |
          curl -s https://get.sdkman.io | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install gradle 8.14.3 || sdk install gradle 8.14.2 || sdk install gradle 8.14.1 || sdk install gradle 8.7
          gradle --version

      - name: Lint (Spotless)
        run: gradle --no-daemon -q lint

      - name: Test
        run: gradle --no-daemon -q test

      - name: Coverage (JaCoCo) and Check
        run: |
          gradle --no-daemon -q jacocoTestReport
          # check includes jacocoTestCoverageVerification (95% thresholds)
          gradle --no-daemon -q check

      - name: Coverage Summary (Job Summary)
        if: always()
        shell: bash
        run: |
          XML=build/reports/jacoco/test/jacocoTestReport.xml
          if [[ -f "$XML" ]]; then
            line_missed=$(grep -o "counter type=\"LINE\"[^>]*" "$XML" | sed -E 's/.*missed=\"([0-9]+)\".*/\1/')
            line_covered=$(grep -o "counter type=\"LINE\"[^>]*" "$XML" | sed -E 's/.*covered=\"([0-9]+)\".*/\1/')
            branch_missed=$(grep -o "counter type=\"BRANCH\"[^>]*" "$XML" | sed -E 's/.*missed=\"([0-9]+)\".*/\1/')
            branch_covered=$(grep -o "counter type=\"BRANCH\"[^>]*" "$XML" | sed -E 's/.*covered=\"([0-9]+)\".*/\1/')
            line_total=$((line_missed + line_covered))
            branch_total=$((branch_missed + branch_covered))
            line_pct=$(python3 - <<PY
from decimal import Decimal, ROUND_HALF_UP
missed=int('$line_missed'); covered=int('$line_covered')
total=missed+covered
print(str((Decimal(covered)/Decimal(total)*100).quantize(Decimal('0.1'), rounding=ROUND_HALF_UP)))
PY
)
            branch_pct=$(python3 - <<PY
from decimal import Decimal, ROUND_HALF_UP
missed=int('$branch_missed'); covered=int('$branch_covered')
total=missed+covered
print(str((Decimal(covered)/Decimal(total)*100).quantize(Decimal('0.1'), rounding=ROUND_HALF_UP)))
PY
)
            {
              echo "### Test Coverage Summary"
              echo
              echo "- Lines: ${line_pct}% (${line_covered}/${line_total} covered)"
              echo "- Branches: ${branch_pct}% (${branch_covered}/${branch_total} covered)"
            } >> "$GITHUB_STEP_SUMMARY"
            printf "LINES=%s\nBRANCHES=%s\n" "$line_pct" "$branch_pct" >> $GITHUB_OUTPUT
          else
            echo "JaCoCo XML not found at $XML" >> "$GITHUB_STEP_SUMMARY"
          fi

      - name: Comment Coverage on PR
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: coverage-summary
          message: |
            ### Test Coverage Summary
            Lines: ${{ steps.coverage-summary.outputs.LINES }}%
            Branches: ${{ steps.coverage-summary.outputs.BRANCHES }}%

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: build/reports/tests/test

      - name: Upload Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: build/reports/jacoco/test
